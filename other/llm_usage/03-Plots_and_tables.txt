LLM: ChatGPT-4o.
Date: 2 November 2024

User:

plots <- list()
# Create bar charts for 'ranked_choice_reallocated' and 'hypothetical'
plots[["ranked_choice"]] <- ggplot(raw_data, aes(x = ranked_choice_reallocated)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  labs(title = "Bar Chart of Ranked Choice Reallocated", x = "Ranked Choice Reallocated", y = "Count") +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 12),
    axis.title = element_text(size = 10),
    axis.text = element_text(size = 10)
  )

plots[["hypothetical"]] <- ggplot(raw_data, aes(x = hypothetical)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  labs(title = "Bar Chart of Hypothetical", x = "Hypothetical", y = "Count") +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 12),
    axis.title = element_text(size = 10),
    axis.text = element_text(size = 10)
  )

# Combine and print the plots using patchwork
combined_plot <- wrap_plots(plots, ncol = 2, nrow = 1, heights = unit(rep(3, 4), "in")) +
  plot_annotation(
    theme = theme(
      plot.title = element_text(hjust = 0.5, size = 14)
    )
  )
# Print the combined plot
print(combined_plot)

ChatGPT：

To add count labels on top of the bars and adjust the plot height to accommodate these labels, we can modify the code as follows:

Add Count Labels: Use geom_text to display the counts on top of each bar.
Increase Plot Height: Adjust the y-axis limits to make sure the labels fit within the plot.
Here's the modified code:

r
# Load necessary libraries
library(ggplot2)
library(patchwork)

# Create a list to store the plots
plots <- list()

# Bar chart for 'ranked_choice_reallocated' with count labels
plots[["ranked_choice"]] <- ggplot(raw_data, aes(x = ranked_choice_reallocated)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5, size = 4) +  # Add count labels
  labs(title = "Bar Chart of Ranked Choice Reallocated", x = "Ranked Choice Reallocated", y = "Count") +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 12),
    axis.title = element_text(size = 10),
    axis.text = element_text(size = 10)
  ) +
  ylim(0, max(table(raw_data$ranked_choice_reallocated)) * 1.2)  # Increase y-axis limit to fit labels

# Bar chart for 'hypothetical' with count labels
plots[["hypothetical"]] <- ggplot(raw_data, aes(x = hypothetical)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5, size = 4) +  # Add count labels
  labs(title = "Bar Chart of Hypothetical", x = "Hypothetical", y = "Count") +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 12),
    axis.title = element_text(size = 10),
    axis.text = element_text(size = 10)
  ) +
  ylim(0, max(table(raw_data$hypothetical)) * 1.2)  # Increase y-axis limit to fit labels

# Combine and print the plots using patchwork
combined_plot <- wrap_plots(plots, ncol = 2) +
  plot_annotation(
    theme = theme(
      plot.title = element_text(hjust = 0.5, size = 14)
    )
  )

# Print the combined plot
print(combined_plot)
Explanation of Changes
geom_text for Count Labels: The geom_text layer with stat = "count" adds the actual counts on top of each bar. The vjust = -0.5 places the labels slightly above the bars.
ylim Adjustment: The ylim function is used to increase the y-axis limit by 20% (multiplied by 1.2), ensuring there is enough space for the labels to appear without being clipped.
This updated code will display counts on top of each bar and make the plots tall enough to fit these labels completely. Let me know if you need further adjustments!

User:

Warning: The dot-dot notation (..count..) was deprecated in ggplot2 3.4.0. Please use after_stat(count) instead.

ChatGPT：

To address the warning about the deprecated ..count.. notation in ggplot2 3.4.0, we can replace ..count.. with after_stat(count) in the geom_text layer. Here’s the updated code:

r

# Load necessary libraries
library(ggplot2)
library(patchwork)

# Create a list to store the plots
plots <- list()

# Bar chart for 'ranked_choice_reallocated' with count labels
plots[["ranked_choice"]] <- ggplot(raw_data, aes(x = ranked_choice_reallocated)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  geom_text(stat = "count", aes(label = after_stat(count)), vjust = -0.5, size = 4) +  # Updated count label notation
  labs(title = "Bar Chart of Ranked Choice Reallocated", x = "Ranked Choice Reallocated", y = "Count") +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 12),
    axis.title = element_text(size = 10),
    axis.text = element_text(size = 10)
  ) +
  ylim(0, max(table(raw_data$ranked_choice_reallocated)) * 1.2)  # Increase y-axis limit to fit labels

# Bar chart for 'hypothetical' with count labels
plots[["hypothetical"]] <- ggplot(raw_data, aes(x = hypothetical)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  geom_text(stat = "count", aes(label = after_stat(count)), vjust = -0.5, size = 4) +  # Updated count label notation
  labs(title = "Bar Chart of Hypothetical", x = "Hypothetical", y = "Count") +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 12),
    axis.title = element_text(size = 10),
    axis.text = element_text(size = 10)
  ) +
  ylim(0, max(table(raw_data$hypothetical)) * 1.2)  # Increase y-axis limit to fit labels

# Combine and print the plots using patchwork
combined_plot <- wrap_plots(plots, ncol = 2) +
  plot_annotation(
    theme = theme(
      plot.title = element_text(hjust = 0.5, size = 14)
    )
  )

# Print the combined plot
print(combined_plot)
Explanation of Changes
Replaced ..count.. with after_stat(count): This updated notation in aes(label = after_stat(count)) conforms to the latest ggplot2 standards, ensuring compatibility and removing the warning.
This modification will remove the warning message while still displaying the counts on top of each bar. Let me know if there are any additional tweaks you’d like!

User:

{r, fig.pos="H", fig.width=18, fig.height=18}
plots <- list()
# Find the top 3 most frequent values in 'methodology' and group others as 'Other'
methodology_counts <- sort(table(raw_data$methodology), decreasing = TRUE)
top_3_methodologies <- names(methodology_counts)[1:3]
raw_data$methodology_grouped <- ifelse(raw_data$methodology %in% top_3_methodologies, raw_data$methodology, "Other")
# Create a bar chart for the grouped 'methodology'
plots[["methodology"]] <- ggplot(raw_data, aes(x = methodology_grouped)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  labs(title = "Top 3 Methodologies and Others", x = "Methodology", y = "Count") +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 12),
    axis.title = element_text(size = 10),
    axis.text = element_text(size = 10)
  )
plots[["population"]] <- ggplot(raw_data, aes(x = population)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  labs(title = "Population", x = "Population", y = "Count") +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 12),
    axis.title = element_text(size = 10),
    axis.text = element_text(size = 10)
  )
# Find the top 3 most frequent values in 'answer' and group others as 'Other'
answer_counts <- sort(table(raw_data$answer), decreasing = TRUE)
top_3_answer <- names(answer_counts)[1:3]
raw_data$answer <- ifelse(raw_data$answer %in% top_3_answer, raw_data$answer, "Other")
# Create a bar chart for the grouped 'answer'
plots[["answer"]] <- ggplot(raw_data, aes(x = answer)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  labs(title = "Top 3 answer and Others", x = "answer", y = "Count") +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 12),
    axis.title = element_text(size = 10),
    axis.text = element_text(size = 10)
  )
combined_plot <- wrap_plots(plots, ncol = 3, nrow = 1, heights = unit(rep(8, 4), "in")) +
  plot_annotation(
    theme = theme(
      plot.title = element_text(hjust = 0.5, size = 14)
    )
  )
# Print the combined plot
print(combined_plot)

ChatGPT：

To make these three bar charts horizontal, increase the font size, and add specific count labels next to each bar, you can use the following modifications:

Flip the charts: Use coord_flip() to make each chart horizontal.
Increase font size: Adjust base_size in theme_minimal() and font sizes in theme().
Add count labels: Use geom_text() to display counts next to each bar.
Here’s the updated code:

r

# Load necessary libraries
library(ggplot2)
library(dplyr)
library(patchwork)

# Create a list to store the plots
plots <- list()

# Top 3 Methodologies with 'Other' grouped
methodology_counts <- sort(table(raw_data$methodology), decreasing = TRUE)
top_3_methodologies <- names(methodology_counts)[1:3]
raw_data$methodology_grouped <- ifelse(raw_data$methodology %in% top_3_methodologies, raw_data$methodology, "Other")

# Create horizontal bar chart for 'methodology'
plots[["methodology"]] <- ggplot(raw_data, aes(x = methodology_grouped)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  geom_text(stat = "count", aes(label = after_stat(count)), hjust = -0.2, size = 5) +  # Add count labels
  labs(title = "Top 3 Methodologies and Others", x = "Count", y = "Methodology") +
  theme_minimal(base_size = 16) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 12)
  ) +
  coord_flip()

# Population bar chart
plots[["population"]] <- ggplot(raw_data, aes(x = population)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  geom_text(stat = "count", aes(label = after_stat(count)), hjust = -0.2, size = 5) +  # Add count labels
  labs(title = "Population", x = "Count", y = "Population") +
  theme_minimal(base_size = 16) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 12)
  ) +
  coord_flip()

# Top 3 Answers with 'Other' grouped
answer_counts <- sort(table(raw_data$answer), decreasing = TRUE)
top_3_answer <- names(answer_counts)[1:3]
raw_data$answer <- ifelse(raw_data$answer %in% top_3_answer, raw_data$answer, "Other")

# Create horizontal bar chart for 'answer'
plots[["answer"]] <- ggplot(raw_data, aes(x = answer)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  geom_text(stat = "count", aes(label = after_stat(count)), hjust = -0.2, size = 5) +  # Add count labels
  labs(title = "Top 3 Answers and Others", x = "Count", y = "Answer") +
  theme_minimal(base_size = 16) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 12)
  ) +
  coord_flip()

# Combine the plots using patchwork
combined_plot <- wrap_plots(plots, ncol = 1) +
  plot_annotation(
    theme = theme(
      plot.title = element_text(hjust = 0.5, size = 14)
    )
  )

# Print the combined plot
print(combined_plot)
Explanation of Changes
Flipped Orientation: Added coord_flip() to each plot to make the bars horizontal.
Increased Font Sizes: Adjusted base_size in theme_minimal() to 16 and set larger font sizes for titles, axis labels, and axis text.
Count Labels: Used geom_text(stat = "count", aes(label = after_stat(count)), hjust = -0.2, size = 5) to place count labels slightly to the right of each bar.
This will display three horizontal bar charts, each with count labels, larger font sizes, and properly spaced titles. Let me know if you need further adjustments!

User:

remove the count labels

ChatGPT：
ChatGPT
To remove the count labels on the y-axis while keeping the count labels on each bar, you can modify the theme settings to remove the y-axis text (axis.text.y). Here’s the updated code:

r
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(patchwork)

# Create a list to store the plots
plots <- list()

# Top 3 Methodologies with 'Other' grouped
methodology_counts <- sort(table(raw_data$methodology), decreasing = TRUE)
top_3_methodologies <- names(methodology_counts)[1:3]
raw_data$methodology_grouped <- ifelse(raw_data$methodology %in% top_3_methodologies, raw_data$methodology, "Other")

# Create horizontal bar chart for 'methodology'
plots[["methodology"]] <- ggplot(raw_data, aes(x = methodology_grouped)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  geom_text(stat = "count", aes(label = after_stat(count)), hjust = -0.2, size = 7) +  # Larger count labels
  labs(title = "Top 3 Methodologies and Others", x = "Count", y = "Methodology") +
  theme_minimal(base_size = 20) +  # Increase base size for all text elements
  theme(
    plot.title = element_text(hjust = 0.5, size = 24, face = "bold"),
    axis.title = element_text(size = 20),
    axis.text.x = element_text(size = 18),
    axis.text.y = element_blank()  # Remove y-axis labels
  ) +
  coord_flip()

# Population bar chart
plots[["population"]] <- ggplot(raw_data, aes(x = population)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  geom_text(stat = "count", aes(label = after_stat(count)), hjust = -0.2, size = 7) +  # Larger count labels
  labs(title = "Population", x = "Count", y = "Population") +
  theme_minimal(base_size = 20) +  # Increase base size for all text elements
  theme(
    plot.title = element_text(hjust = 0.5, size = 24, face = "bold"),
    axis.title = element_text(size = 20),
    axis.text.x = element_text(size = 18),
    axis.text.y = element_blank()  # Remove y-axis labels
  ) +
  coord_flip()

# Top 3 Answers with 'Other' grouped
answer_counts <- sort(table(raw_data$answer), decreasing = TRUE)
top_3_answer <- names(answer_counts)[1:3]
raw_data$answer <- ifelse(raw_data$answer %in% top_3_answer, raw_data$answer, "Other")

# Create horizontal bar chart for 'answer'
plots[["answer"]] <- ggplot(raw_data, aes(x = answer)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  geom_text(stat = "count", aes(label = after_stat(count)), hjust = -0.2, size = 7) +  # Larger count labels
  labs(title = "Top 3 Answers and Others", x = "Count", y = "Answer") +
  theme_minimal(base_size = 20) +  # Increase base size for all text elements
  theme(
    plot.title = element_text(hjust = 0.5, size = 24, face = "bold"),
    axis.title = element_text(size = 20),
    axis.text.x = element_text(size = 18),
    axis.text.y = element_blank()  # Remove y-axis labels
  ) +
  coord_flip()

# Combine the plots using patchwork
combined_plot <- wrap_plots(plots, ncol = 1) +
  plot_annotation(
    theme = theme(
      plot.title = element_text(hjust = 0.5, size = 24)
    )
  )

# Print the combined plot
print(combined_plot)
Explanation of Changes
Remove Y-axis Labels: axis.text.y = element_blank() in the theme function for each plot removes the count labels on the y-axis while keeping the count labels on each bar.
This should provide clean, horizontal bar charts with only the count labels on each bar and no counts on the y-axis. Let me know if you need further adjustments!

User:

keep the category names on the y-axis

ChatGPT：

Understood! To keep the category names on the y-axis (such as Methodology, Population, and Answer) while removing the count labels, we can adjust the theme settings to specifically disable the x-axis labels (for the flipped charts, which correspond to counts). Here’s how to achieve that:

r

# Load necessary libraries
library(ggplot2)
library(dplyr)
library(patchwork)

# Create a list to store the plots
plots <- list()

# Top 3 Methodologies with 'Other' grouped
methodology_counts <- sort(table(raw_data$methodology), decreasing = TRUE)
top_3_methodologies <- names(methodology_counts)[1:3]
raw_data$methodology_grouped <- ifelse(raw_data$methodology %in% top_3_methodologies, raw_data$methodology, "Other")

# Create horizontal bar chart for 'methodology'
plots[["methodology"]] <- ggplot(raw_data, aes(x = methodology_grouped)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  geom_text(stat = "count", aes(label = after_stat(count)), hjust = -0.2, size = 7) +  # Larger count labels
  labs(title = "Top 3 Methodologies and Others", x = "Count", y = "Methodology") +
  theme_minimal(base_size = 20) +  # Increase base size for all text elements
  theme(
    plot.title = element_text(hjust = 0.5, size = 24, face = "bold"),
    axis.title.x = element_blank(),  # Remove x-axis (count) title
    axis.text.x = element_blank(),  # Remove x-axis (count) labels
    axis.title.y = element_text(size = 20),  # Keep y-axis (category) title
    axis.text.y = element_text(size = 18)  # Keep y-axis (category) labels
  ) +
  coord_flip()

# Population bar chart
plots[["population"]] <- ggplot(raw_data, aes(x = population)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  geom_text(stat = "count", aes(label = after_stat(count)), hjust = -0.2, size = 7) +  # Larger count labels
  labs(title = "Population", x = "Count", y = "Population") +
  theme_minimal(base_size = 20) +  # Increase base size for all text elements
  theme(
    plot.title = element_text(hjust = 0.5, size = 24, face = "bold"),
    axis.title.x = element_blank(),  # Remove x-axis (count) title
    axis.text.x = element_blank(),  # Remove x-axis (count) labels
    axis.title.y = element_text(size = 20),  # Keep y-axis (category) title
    axis.text.y = element_text(size = 18)  # Keep y-axis (category) labels
  ) +
  coord_flip()

# Top 3 Answers with 'Other' grouped
answer_counts <- sort(table(raw_data$answer), decreasing = TRUE)
top_3_answer <- names(answer_counts)[1:3]
raw_data$answer <- ifelse(raw_data$answer %in% top_3_answer, raw_data$answer, "Other")

# Create horizontal bar chart for 'answer'
plots[["answer"]] <- ggplot(raw_data, aes(x = answer)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  geom_text(stat = "count", aes(label = after_stat(count)), hjust = -0.2, size = 7) +  # Larger count labels
  labs(title = "Top 3 Answers and Others", x = "Count", y = "Answer") +
  theme_minimal(base_size = 20) +  # Increase base size for all text elements
  theme(
    plot.title = element_text(hjust = 0.5, size = 24, face = "bold"),
    axis.title.x = element_blank(),  # Remove x-axis (count) title
    axis.text.x = element_blank(),  # Remove x-axis (count) labels
    axis.title.y = element_text(size = 20),  # Keep y-axis (category) title
    axis.text.y = element_text(size = 18)  # Keep y-axis (category) labels
  ) +
  coord_flip()

# Combine the plots using patchwork
combined_plot <- wrap_plots(plots, ncol = 1) +
  plot_annotation(
    theme = theme(
      plot.title = element_text(hjust = 0.5, size = 24)
    )
  )

# Print the combined plot
print(combined_plot)
Explanation of Changes
Remove X-axis Labels and Title: axis.text.x = element_blank() and axis.title.x = element_blank() remove the count labels and title along the x-axis, which is the horizontal axis after flipping.
Keep Y-axis Category Labels: The y-axis labels (categories like "Methodology", "Population", and "Answer") are preserved by setting axis.text.y = element_text(size = 18) and axis.title.y = element_text(size = 20).
This setup should display the category names on the y-axis without the count values on the x-axis, making it clear and focused on the categories. Let me know if any further adjustments are needed!

# Create a list to store the plots
plots <- list()

# Top 3 Methodologies with 'Other' grouped
methodology_counts <- sort(table(raw_data$methodology), decreasing = TRUE)
top_3_methodologies <- names(methodology_counts)[1:3]
raw_data$methodology_grouped <- ifelse(raw_data$methodology %in% top_3_methodologies, raw_data$methodology, "Other")

# Create horizontal bar chart for 'methodology'
plots[["methodology"]] <- ggplot(raw_data, aes(x = methodology_grouped)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  geom_text(stat = "count", aes(label = after_stat(count)), hjust = -0.2, size = 7) +  # Larger count labels
  labs(title = "Top 3 Methodologies and Others", x = "Count", y = "Methodology") +
  theme_minimal(base_size = 20) +  # Increase base size for all text elements
  theme(
    plot.title = element_text(hjust = 0.5, size = 24, face = "bold"),
    axis.title = element_text(size = 20),
    axis.text = element_text(size = 18)
  ) +
  coord_flip()

# Population bar chart
plots[["population"]] <- ggplot(raw_data, aes(x = population)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  geom_text(stat = "count", aes(label = after_stat(count)), hjust = -0.2, size = 7) +  # Larger count labels
  labs(title = "Population", x = "Count", y = "Population") +
  theme_minimal(base_size = 20) +  # Increase base size for all text elements
  theme(
    plot.title = element_text(hjust = 0.5, size = 24, face = "bold"),
    axis.title = element_text(size = 20),
    axis.text = element_text(size = 18)
  ) +
  coord_flip()

# Top 3 Answers with 'Other' grouped
answer_counts <- sort(table(raw_data$answer), decreasing = TRUE)
top_3_answer <- names(answer_counts)[1:3]
raw_data$answer <- ifelse(raw_data$answer %in% top_3_answer, raw_data$answer, "Other")

# Create horizontal bar chart for 'answer'
plots[["answer"]] <- ggplot(raw_data, aes(x = answer)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  geom_text(stat = "count", aes(label = after_stat(count)), hjust = -0.2, size = 7) +  # Larger count labels
  labs(title = "Top 3 Answers and Others", x = "Count", y = "Answer") +
  theme_minimal(base_size = 20) +  # Increase base size for all text elements
  theme(
    plot.title = element_text(hjust = 0.5, size = 24, face = "bold"),
    axis.title = element_text(size = 20),
    axis.text = element_text(size = 18)
  ) +
  coord_flip()

# Combine the plots using patchwork
combined_plot <- wrap_plots(plots, ncol = 1) +
  plot_annotation(
    theme = theme(
      plot.title = element_text(hjust = 0.5, size = 24)
    )
  )

# Print the combined plot
print(combined_plot)

User:

increase all the font sizes within the plots

ChatGPT：

To further increase all the font sizes within the plots, we can adjust specific elements within the theme() settings for each plot. This will include enlarging the titles, axis labels, axis text, and count labels. Here’s the updated code:

r

# Load necessary libraries
library(ggplot2)
library(dplyr)
library(patchwork)

# Create a list to store the plots
plots <- list()

# Top 3 Methodologies with 'Other' grouped
methodology_counts <- sort(table(raw_data$methodology), decreasing = TRUE)
top_3_methodologies <- names(methodology_counts)[1:3]
raw_data$methodology_grouped <- ifelse(raw_data$methodology %in% top_3_methodologies, raw_data$methodology, "Other")

# Create horizontal bar chart for 'methodology'
plots[["methodology"]] <- ggplot(raw_data, aes(x = methodology_grouped)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  geom_text(stat = "count", aes(label = after_stat(count)), hjust = -0.2, size = 9) +  # Larger count labels
  labs(title = "Top 3 Methodologies and Others", x = "Count", y = "Methodology") +
  theme_minimal(base_size = 24) +  # Increase base size for all text elements
  theme(
    plot.title = element_text(hjust = 0.5, size = 32, face = "bold"),  # Title font size
    axis.title = element_text(size = 28),  # Axis title font size
    axis.text = element_text(size = 24)  # Axis text font size
  ) +
  coord_flip()

# Population bar chart
plots[["population"]] <- ggplot(raw_data, aes(x = population)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  geom_text(stat = "count", aes(label = after_stat(count)), hjust = -0.2, size = 9) +  # Larger count labels
  labs(title = "Population", x = "Count", y = "Population") +
  theme_minimal(base_size = 24) +  # Increase base size for all text elements
  theme(
    plot.title = element_text(hjust = 0.5, size = 32, face = "bold"),  # Title font size
    axis.title = element_text(size = 28),  # Axis title font size
    axis.text = element_text(size = 24)  # Axis text font size
  ) +
  coord_flip()

# Top 3 Answers with 'Other' grouped
answer_counts <- sort(table(raw_data$answer), decreasing = TRUE)
top_3_answer <- names(answer_counts)[1:3]
raw_data$answer <- ifelse(raw_data$answer %in% top_3_answer, raw_data$answer, "Other")

# Create horizontal bar chart for 'answer'
plots[["answer"]] <- ggplot(raw_data, aes(x = answer)) +
  geom_bar(fill = "#69b3a2", color = "black", alpha = 0.8) +
  geom_text(stat = "count", aes(label = after_stat(count)), hjust = -0.2, size = 9) +  # Larger count labels
  labs(title = "Top 3 Answers and Others", x = "Count", y = "Answer") +
  theme_minimal(base_size = 24) +  # Increase base size for all text elements
  theme(
    plot.title = element_text(hjust = 0.5, size = 32, face = "bold"),  # Title font size
    axis.title = element_text(size = 28),  # Axis title font size
    axis.text = element_text(size = 24)  # Axis text font size
  ) +
  coord_flip()

# Combine the plots using patchwork
combined_plot <- wrap_plots(plots, ncol = 1) +
  plot_annotation(
    theme = theme(
      plot.title = element_text(hjust = 0.5, size = 32)
    )
  )

# Print the combined plot
print(combined_plot)
Explanation of Changes
Increased base_size: Set base_size to 24 in theme_minimal(), which scales up all elements by default.
Customized Font Sizes:
plot.title = element_text(size = 32, face = "bold") makes the plot titles larger and bold.
axis.title = element_text(size = 28) and axis.text = element_text(size = 24) increase the sizes of axis labels and axis text.
geom_text label size set to 9 for count labels, making them more visible.
This code will make all the font elements in the plots significantly larger for better readability. Let me know if you need any further adjustments!