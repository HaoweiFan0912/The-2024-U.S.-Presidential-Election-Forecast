"0","# Define file paths"
"0","source_folder <- ""data/03-cleaned_data/cleaned_data_by_candidate/"""
"0","destination_folder <- ""data/02-analysis_data/"""
"0",""
"0","# Define filenames"
"0","files_to_move <- c(""Donald Trump_cleaned_data.csv"", ""Kamala Harris_cleaned_data.csv"", ""Joe Biden_cleaned_data.csv"")"
"0",""
"0","# Copy each file from source to destination"
"0","for (file_name in files_to_move) {"
"0","  file_path <- file.path(source_folder, file_name)"
"0","  destination_path <- file.path(destination_folder, file_name)"
"0","  "
"0","  # Copy file"
"0","  file.copy(file_path, destination_path, overwrite = TRUE)"
"0","  message(paste(""File saved to:"", destination_path))"
"0","}"
"0",""
"0","# Load data for each candidate"
"0","donald_trump_data <- read_csv(here::here(""data/02-analysis_data/Donald Trump_cleaned_data.csv""))"
"0","joe_biden_data <- read_csv(here::here(""data/02-analysis_data/Joe Biden_cleaned_data.csv"")) "
"0","kamala_harris_data <- read_csv(here::here(""data/02-analysis_data/Kamala Harris_cleaned_data.csv"")) "
"0",""
"0","# Define and load data for each candidate"
"0","candidate_data <- list("
"0","  ""Donald Trump"" = donald_trump_data %>% select(-poll_id, -pct),"
"0","  ""Kamala Harris"" = joe_biden_data %>% select(-poll_id, -pct),"
"0","  ""Joe Biden"" = kamala_harris_data %>% select(-poll_id, -pct)"
"0",")"
"0",""
"0","# Function to create distribution plots for each variable in a dataset"
"0","plot_distributions <- function(data, candidate_name) {"
"0","  plots <- list()"
"0","  "
"0","  for (var in names(data)) {"
"0","    if (is.numeric(data[[var]])) {"
"0","      # Histogram for numeric variables"
"0","      plot <- ggplot(data, aes(x = .data[[var]])) +"
"0","        geom_histogram(bins = 30, color = ""black"", fill = ""skyblue"") +"
"0","        labs(title = paste(""Distribution of"", var, ""for"", candidate_name), x = var, y = ""Frequency"") +"
"0","        theme_minimal()"
"0","      "
"0","    } else if (is.character(data[[var]]) || is.factor(data[[var]])) {"
"0","      # Bar plot for categorical variables"
"0","      plot <- ggplot(data, aes(x = .data[[var]])) +"
"0","        geom_bar(color = ""black"", fill = ""skyblue"") +"
"0","        labs(title = paste(""Distribution of"", var, ""for"", candidate_name), x = var, y = ""Count"") +"
"0","        theme_minimal()"
"0","      "
"0","    } else if (is.logical(data[[var]])) {"
"0","      # Bar plot for logical variables (TRUE/FALSE)"
"0","      plot <- ggplot(data, aes(x = factor(.data[[var]], levels = c(TRUE, FALSE)))) +"
"0","        geom_bar(color = ""black"", fill = ""skyblue"") +"
"0","        labs(title = paste(""Distribution of"", var, ""for"", candidate_name), x = var, y = ""Count"") +"
"0","        theme_minimal()"
"0","    }"
"0","    "
"0","    # Add plot to list"
"0","    plots[[var]] <- plot"
"0","  }"
"0","  "
"0","  # Combine all individual plots into one using patchwork"
"0","  combined_plot <- wrap_plots(plots) +"
"0","    plot_annotation(title = paste(""Distributions of Variables for"", candidate_name))"
"0","  "
"0","  return(combined_plot)"
"0","}"
"0",""
"0","# Create and display combined plots for each candidate"
"0","for (candidate_name in names(candidate_data)) {"
"0","  data <- candidate_data[[candidate_name]]"
"0","  combined_plot <- plot_distributions(data, candidate_name)"
"0","  print(combined_plot)"
"0","}"
