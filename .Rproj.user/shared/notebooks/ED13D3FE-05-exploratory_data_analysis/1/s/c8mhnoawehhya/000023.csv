"0","# Define paths for each candidate's data"
"0","candidate_files <- list("
"0","  ""Donald Trump"" = ""data/02-analysis_data/Donald Trump_cleaned_data.csv"","
"0","  ""Kamala Harris"" = ""data/02-analysis_data/Kamala Harris_cleaned_data.csv"","
"0","  ""Joe Biden"" = ""data/02-analysis_data/Joe Biden_cleaned_data.csv"""
"0",")"
"0",""
"0","# Function to calculate representative values"
"0","calculate_representative_value <- function(data) {"
"0","  data %>%"
"0","    summarise("
"0","      pollscore_mean = mean(pollscore, na.rm = TRUE),"
"0","      numeric_grade_median = median(numeric_grade, na.rm = TRUE),"
"0","      transparency_score_mean = mean(transparency_score, na.rm = TRUE),"
"0","      duration_mean = mean(duration, na.rm = TRUE),"
"0","      sample_size_mean = mean(sample_size, na.rm = TRUE),"
"0","      population_mode = as.character(names(sort(table(population), decreasing = TRUE)[1])),  # Calculate mode"
"0","      hypothetical_mode = as.logical(names(sort(table(hypothetical), decreasing = TRUE)[1])),  # Calculate mode"
"0","      Methodology_mode = as.character(names(sort(table(Methodology), decreasing = TRUE)[1])),  # Calculate mode"
"0","      pct_mean = mean(pct, na.rm = TRUE)"
"0","    )"
"0","}"
"0",""
"0","# Calculate and display representative values for each candidate"
"0","all_representative_values <- list()"
"0","for (candidate_name in names(candidate_files)) {"
"0","  data <- read_csv(here::here(candidate_files[[candidate_name]]))"
"0","  representative_values <- calculate_representative_value(data)"
"0","  all_representative_values[[candidate_name]] <- representative_values"
"0","}"
"0",""
"0","# Combine and display full results as a single data frame"
"0","full_representative_values <- bind_rows(all_representative_values, .id = ""Candidate"")"
"0","print(full_representative_values, width = Inf)"
